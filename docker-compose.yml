services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper-data:/var/lib/zookeeper
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka-data:/var/lib/kafka
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  nestjs-backend:
    build:
      context: ./PlantNestJS
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
    env_file: .env

  flask-producer:
    build:
      context: ./FlaskAPI
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: "kafka:9092"
    restart: always
    devices:
      - "/dev/spidev0.0:/dev/spidev0.0"
      - "/dev/spidev0.1:/dev/spidev0.1"
    privileged: true

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
